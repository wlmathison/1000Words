@model IEnumerable<_1000Words.Models.Photo>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager


@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    @* If user is signed in *@
    @if (SignInManager.IsSignedIn(User))
    {
        <h1 class="display-4">Welcome back @User.Identity.Name</h1>
        <br />

        <div class="text-center">
            @foreach (var item in Model.OrderBy(x => Guid.NewGuid()).Take(1))
            {
                var photoPath = "~/images/" + (item.Path ?? "noimage.jpg");

                <div class="m-2">
                    <img class="card-img-top welcomeImageThumbnail" src="@photoPath"
                         asp-append-version="true" />
                </div>
            }
        </div>
    }
    else
    {
        <h1 class="display-4">Welcome to 1000Words!</h1>
        <p>
            1000Words is an interactive photo album which allows you to tag your photos with keywords using speech-to-text technology. 1000Words allows you to search through all of your photos quickly using only keywords or dates, significantly decreasing the amount of time needed to find photos.
        </p>

    }

</div>


