@model _1000Words.Models.ViewModels.PhotoCreateMultipleViewModel

@{
    ViewData["Title"] = "CreateMultiple";
}

<h1>Add multiple photos</h1>
<hr />
<form enctype="multipart/form-data" asp-controller="Photos" asp-action="CreateMultiple"
      method="post" class="mt-3">

    @*  asp-for tag helper is set to "Photo" property. "Photo" property type is IFormFile
        so at runtime asp.net core generates file upload control (input type=file)
    *@

    <div class="form-group row">
        <div class="col-sm-6">
            <div class="custom-file">
                <input asp-for="Photos" class="form-control custom-file-input" accept="image/*" multiple>
                <label class="custom-file-label">Choose Photos...</label>
            </div>
        </div>
    </div>

    <div asp-validation-summary="All" class="text-danger"></div>

    <div class="d-flex flex-row">
        <button type="submit" class="btn btn-primary mr-1 btn-sm">Save</button>
        <a href="javascript: history.go(-1)" class="btn btn-secondary btn-sm">Cancel</a>
    </div>

    @*This script is required to display the selected file in the file upload element*@

    @section Scripts {
        <script>
            $(document).ready(function () {
                $('.custom-file-input').on("change", function () {
                    var fileName = $(this).next('.custom-file-label');
                    var files = $(this)[0].files;
                    if (files.length > 1) {
                        fileName.html(files.length + " photos selected")
                    }
                    else if (files.length == 1) {
                        fileName.html($(this).val().split("\\").pop());
                    }
                });
            });
        </script>
    }
</form>


@*
        @section Scripts {
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    }
*@
